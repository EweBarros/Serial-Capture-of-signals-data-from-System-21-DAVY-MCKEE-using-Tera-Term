connect '/C=9' ; Conecta o TTPMACRO ao TeraTerm e conecta com a COM1 
;*********************************************************************************************
;
; REGISTRO DE DADOS E SINAIS DO SISTEMA 21 (DAVY MCKEE)
;
; Data: 23-abril-2019
; Atualizado: 24-setembro-2019 (formatacao do arquivo de saida DesviodePlanicidade_Spray.txt)
; Atualizado: 12-novembro-2019 (criacao do arquivo RunningFile na pasta Working)
; Atualizado: 18-novembro-2019 (validacao de Logon no inicio do programa)
; Atualizado: 10-dezembro-2019 (Separacao dos dados em 3 arquivos diferentes)
;
; Autor: Ewelim Barros
;
; Projetado para TERATERM 4.101
; Script do Teraterm para armazenamento de dados no Davy Sistema 21 do PLC DAVY MCKEE
;
;*********************************************************************************************
; INICIO DO PROGRAMA

;Arquivos txt utilizados
dir_log_dados_1 = "R:\Working\Dados_1.txt" 
dir_log_dados_2 = "R:\Working\Dados_2.txt" 
dir_log_dados_3 = "R:\Working\Dados_3.txt" 
dados_iba_1 = "R:\TXT_Davy\Dados_1.txt"
dados_iba_2 = "R:\TXT_Davy\Dados_2.txt"
dados_iba_3 = "R:\TXT_Davy\Dados_3.txt"
dir_log = "R:\Working\DesviodePlanicidadeSpray.txt"
desvio_iba = "R:\TXT_Davy\DesviodePlanicidade_Spray.txt"
dir_log_temp = "R:\Working\DesviodePlanicidadeSpraytemporario.txt"
dir_running_file = "R:\Working\Runningfile.txt"

UserPass = '#######'

changedir dir_log ;Muda o diretorio para dir_log
filedelete dir_running_file ;Exclui arquivo Runningfile.txt da pasta Working
sendln #10 ;Envia Enter

;    VALIDACAO DE LOGON - Ewelim 18-11-19
;0 = Logado com comando Snapshot ativo - envia Ctrl+C e inicia o programa
;1 = Nao logado - faz o Logon ate funcionar e inicia o programa
;2 = Logado e pronto para enviar comando de Snapshot - inicia o programa

timeout = 2
mtimeout = 0
wait 'Logon:' 'A737[0]- ' ;Verifica se ja esta logado
if result=0 then  ;Esta logado e o snapshot esta ativo
    send #3
	goto start 
elseif result=1 then   ;Nao esta logado
	sendln UserPass   ;Envia Usuario
	wait  'Password:' ;Espera pedido de senha
	sendln UserPass   ;Envia senha
	:checklogon
	timeout = 3
	wait  'Logon:' ;Verifica se o Logon funcionou
	if result=1 then  ;Se nao funcionou, faz de novo
	     sendln UserPass   ;Envia Usuario
	   	 wait  'Password:' ;Espera pedido de senha
		 sendln UserPass   ;Envia senha
		 goto checklogon   ;checa de novo
	else
		 goto start  ;Logon funcionou, vai para o inicio do programa
	endif
elseif result=2 then  ;Esta logado e pronto para enviar comando
	   goto started
endif

while 1	
	  	:start
		  	wait 'A737[0]- ' ;Espera o pedido de comando da serial
		:started
			fhandle = 0
		  	sendln 'snapshot MillInRun -s1' ;Envia comando para obter flag Mill in Run de 1 em 1 segundo
		    sendln 'snapshot MillInRun -s1' ;Envia comando para obter flag Mill in Run de 1 em 1 segundo
		    sendln 'snapshot MillInRun -s1' ;Envia comando para obter flag Mill in Run de 1 em 1 segundo
		    timeout = 90000
			wait'MillInRun:   1';Espera que o Laminador comece a rodar para aquisitar Dados
		    if result=1 send #3 ; Envia CTRL+C para parar de obter flag Mill in Run
			fileopen fhandle dir_running_file 0 ;Abre o arquivo Runningfile.txt com o cursor no seu inicio	     
			filewriteln fhandle "Maquina em laminacao"
			logopen dir_running_file 1 1 ;Inicia log de dados no arquivo Running File (eliminar caracteres indesejados na primeira linha)
			timeout = 0
			mtimeout = 800
			wait 'timeoutflag' ;Espera 0.8s para fechar o log de dados
			if result=0 goto closelog1		
		:closelog1
			logclose ;Fecha o log de dados
			fileclose fhandle ;Fecha o arquivo Runningfile.txt 
					 	
		:capturedatapart1
			wait 'A737[0]- '
			sendln 'snapshot CoilID AlloyID OperatorRunSpeedTarget OperatorRunEntryTensionTarget' ;Envia comando para aquisitar 4 dados de uma vez
			sendln 'snapshot CoilID AlloyID OperatorRunSpeedTarget OperatorRunEntryTensionTarget' 
			timeout = 5
			wait 'CoilID, AlloyID' ;Espera a string ou 5 segundos
		:openlogdata
			logopen dir_log_dados_1 1 0 ;Inicia log de dados no arquivo de nome Dados_1.txt e escreve por cima do arquivo existente
			timeout = 0
			mtimeout = 800
			wait 'timeoutflag' ;Espera 0.8s para fechar o log de dados
			if result=0 goto closelogdata		
		:closelogdata
			logclose ;Fecha o log de dados
			send #3	;Envia ctrl+c para parar de obter os dados
		:getID
			CoilIDstr = ' '
			AlloyIDstr = ' '
			fileopen fhandle dir_log_dados_1 0 ;Abre o arquivo Dados_1.txt com o cursor no seu inicio
			filestrseek fhandle 'CoilID:  ' ;Procura pelo CoilID e move o cursor para o proximo caractere
			if result=1 then
			   filereadln fhandle CoilIDstr ;Le a linha do arquivo e armazena o codigo na string CoilIDstr
			endif
			filestrseek fhandle 'AlloyID:  ' ;Procura pelo AlloyID e move o cursor para o proximo caractere
			if result=1 then
			   filereadln fhandle AlloyIDstr ;Le a linha do arquivo e armazena o codigo na string AlloyIDstr
			   fileseek fhandle 0 0 ;Move o cursor para o inicio do arquivo
			   fileclose fhandle ;Fecha o arquivo
			endif
		:codeCoilID
			strsplit CoilIDstr ' ' 9 ;Separa o codigo da Bobina em 9 strings, sendo as 8 ou 6 primeiras, os codigos decimais correspondentes aos caracteres em ASCII do CoilID e a ultima composta de zeros
					 		   
			str2int alg1 groupmatchstr1 ;Converte a parte 1 do codigo de string para inteiro
			str2int alg2 groupmatchstr2 ;Converte a parte 2 do codigo de string para inteiro
			str2int alg3 groupmatchstr3 ;Converte a parte 3 do codigo de string para inteiro
			str2int alg4 groupmatchstr4 ;Converte a parte 4 do codigo de string para inteiro
			str2int alg5 groupmatchstr5 ;Converte a parte 5 do codigo de string para inteiro
			str2int alg6 groupmatchstr6 ;Converte a parte 6 do codigo de string para inteiro
			str2int alg7 groupmatchstr7 ;Converte a parte 7 do codigo de string para inteiro
			str2int alg8 groupmatchstr8 ;Converte a parte 8 do codigo de string para inteiro
				
			code2str str1 alg1 ;Obtem o caractere ASCII correspondente a parte 1 do codigo e armazena em str1
			code2str str2 alg2 ;Obtem o caractere ASCII correspondente a parte 2 do codigo e armazena em str2
			code2str str3 alg3 ;Obtem o caractere ASCII correspondente a parte 3 do codigo e armazena em str3
			code2str str4 alg4 ;Obtem o caractere ASCII correspondente a parte 4 do codigo e armazena em str4
			code2str str5 alg5 ;Obtem o caractere ASCII correspondente a parte 5 do codigo e armazena em str5
			code2str str6 alg6 ;Obtem o caractere ASCII correspondente a parte 6 do codigo e armazena em str6
			if alg7=0 then ;Se a parte 7 do codigo for 0, armazena espaco (' ') em str7
			   str7 = ' ' 
			elseif alg7>0 then   ;Se nao,
				code2str str7 alg7 ;Obtem o caractere ASCII correspondente a parte 7 do codigo e armazena em str7
			endif
			if alg8=0 then ;Se a parte 8 do codigo for 0, armazena espaco (' ') em str8
			   str8 = ' ' 
			elseif alg8>0 then   ;Se nao,
			   code2str str8 alg8  ;Obtem o caractere ASCII correspondente a parte 8 do codigo e armazena em str8
			endif
			CoilID = ' '	   		 	 	  
			sprintf2 CoilID '%s%s%s%s%s%s%s%s' str1 str2 str3 str4 str5 str6 str7 str8 ;Junta as strings e armazena em CoilID
		:codeAlloyID
			strsplit AlloyIDstr ' ' 5 ;Separa o codigo da Liga em 5 strings, sendo a ultima composta de zeros 
			str2int num1 groupmatchstr1 ;Converte a parte 1 do codigo de string para inteiro
			str2int num2 groupmatchstr2 ;Converte a parte 2 do codigo de string para inteiro 
			str2int num3 groupmatchstr3 ;Converte a parte 3 do codigo de string para inteiro
			str2int num4 groupmatchstr4 ;Converte a parte 4 do codigo de string para inteiro

			code2str strvar1 num1 ;Obtem o caractere ASCII correspondente a parte 1 do codigo e armazena em strvar1
			code2str strvar2 num2 ;Obtem o caractere ASCII correspondente a parte 2 do codigo e armazena em strvar2
			code2str strvar3 num3 ;Obtem o caractere ASCII correspondente a parte 3 do codigo e armazena em strvar3
			code2str strvar4 num4 ;Obtem o caractere ASCII correspondente a parte 4 do codigo e armazena em strvar4
			AlloyID = ' '
			sprintf2 AlloyID '%s%s%s%s' strvar1 strvar2 strvar3 strvar4  ;Junta as strings e armazena em AlloyID
		:rewritefile1	
			infile = dir_log_dados_1 ;Arquivo de entrada
			outfile = dados_iba_1 ;Arquivo de saida com CoilID e AlloyID codificados
			ifd = 0
			ofd = 0
			fileopen ifd infile 0 ;Abre o arquivo de entrada com o cursor no inicio
			fileopen ofd outfile 0 ;Abre o arquivo de saida com o cursor no inicio
			filereadln ifd line ;Move o cursor para a segunda linha do arquivo de entrada (nao copia a primeira linha para o arquivo de saida - contem lixo)
			while 1
				filereadln ifd line ;Le uma linha do arquivo de entrada e armazena na string line
				if result=1 then ;Se chegar no fim do arquivo, sai do loop
				break
				endif
				strreplace line 1 CoilIDstr CoilID ;Substitui o dado antigo pelo CoilID codificado
				strreplace line 1 AlloyIDstr AlloyID ;Substitui o dado antigo pelo AlloyID codificado
				filewriteln ofd line ;Escreve cada linha no arquivo de saida
			endwhile
			fileclose ifd ;Fecha o arquivo de entrada
			fileclose ofd ;Fecha o arquivo de saida
					  	  
		:capturedatapart2
			timeout = 2
			wait 'A737[0]- ' ;Espera o pedido de comando ou 2 segundos
			sendln 'snapshot OperatorRunExitTensionTarget OperatorBowTarget OperatorTiltTarget' ;Envia comando para aquisitar o segundo grupo de dados
			sendln 'snapshot OperatorRunExitTensionTarget OperatorBowTarget OperatorTiltTarget'
			timeout = 5
			wait 'OperatorRunExitTensionTarget, OperatorBowTarget' ;Espera string ou 5 segundos
			logopen dir_log_dados_2 1 0 ;Inicia log de dados no arquivo de nome Dados_2.txt e escreve por cima do arquivo existente
			timeout = 0
			mtimeout = 500
			wait 'timeoutflag'  ;Espera 0.5s para fechar o log de dados
			if result=0 goto closelogdata2 		
		:closelogdata2
			logclose ;Fecha log de dados
			send #3	;Envia ctrl+c para parar de obter os dados
		:rewritefile2	
			infile = dir_log_dados_2
			outfile = dados_iba_2

			fileopen ifd infile 0 ;Abre o arquivo de entrada com o cursor no inicio
			fileopen ofd outfile 0 ;Abre o arquivo de saida com o cursor no inicio
			
			filereadln ifd line ;Move o cursor para a segunda linha (nao copia a primeira linha para o arquivo de saida)
			while 1
				filereadln ifd line ;Le uma linha do arquivo de entrada e armazena na string line
				if result=1 then ;Se chegar no fim do arquivo, sai do loop
				break
				endif
				filewriteln ofd line ;Escreve cada linha do arquivo de entrada no arquivo de saida
			endwhile
			fileclose ifd ;Fecha o arquivo de entrada
			fileclose ofd ;Fecha o arquivo de saida		
				   
		:capturedatapart3
			timeout = 2
			wait 'A737[0]- ' ;Espera o pedido de comando ou 2 segundos 
			sendln 'snapshot OperatorEdgeTarget OperatorLoadTarget AGCModeSelected ShapeTarget'  ;Envia comando para aquisitar o terceiro grupo de dados
			sendln 'snapshot OperatorEdgeTarget OperatorLoadTarget AGCModeSelected ShapeTarget'
			timeout = 5
			wait 'OperatorEdgeTarget, OperatorLoadTarget' ;Espera string ou 5 segundos
			logopen dir_log_dados_3 1 0 ;Inicia log de dados no arquivo de nome Dados_3.txt e escreve por cima do arquivo existente
			timeout = 0
			mtimeout = 500
			wait 'timeoutflag' ;Espera 0.5s para fechar o log de dados
			if result=0 goto closelogdata3 		
		:closelogdata3
			logclose ;Fecha log de dados
			send #3	;Envia ctrl+c para parar de obter os dados
		:getAGC
			;Inicializa strings
			AGCModestr = ''
			AGCMode = ''
			AGCModestring = ''
			AGCModewrite = ''
			fileopen fhandle dir_log_dados_3 0 ;Abre o arquivo Dados_3.txt com o cursor no inicio
			filestrseek fhandle 'AGCModeSelected:    ' ;Procura pelo AGCModeSelected e move o cursor para o proximo caractere
			if result=1 then
			   filereadln fhandle AGCModestr ;Le a linha do arquivo e armazena o codigo na string AGCModestr
			   fileseek fhandle 0 0 ;Move o cursor para o inicio do arquivo
			   fileclose fhandle ;Fecha o arquivo
			endif
		:codeAGC
			;Decodifica os modos em strings e armazena em AGCMode
			strcompare AGCModestr ' 1'
			if result=0 AGCMode = 'GEFB_Speed  '
			strcompare AGCModestr ' 2'
			if result=0 AGCMode = 'GEFB_Spd_Ten'
			strcompare AGCModestr ' 3'
			if result=0 AGCMode = 'GEFB_Ten_Spd'
			strcompare AGCModestr ' 4'
			if result=0 AGCMode = 'GEFB_Tension'
			strcompare AGCModestr ' 5'
			if result=0 AGCMode = 'GEFB_Tens_Ld'
			strcompare AGCModestr ' 6'
			if result=0 AGCMode = 'GEFB_Ld_Tens'
			strcompare AGCModestr ' 7'
			if result=0 AGCMode = 'GEFB_Load   '
			strcompare AGCModestr ' 9'
			if result=0 AGCMode = 'GEFFGEFB_Ld '
			strcompare AGCModestr '10'
			if result=0 AGCMode = 'GEFF_Load   '
			strcompare AGCModestr '12'
			if result=0 AGCMode = 'GEFB_Pos    '
			strcompare AGCModestr '14'
			if result=0 AGCMode = 'GEFB_Gap    '
			strcompare AGCModestr '16'
			if result=0 AGCMode = 'GEFFGEFB_Gap'
			strcompare AGCModestr '17'
			if result=0 AGCMode = 'GEFF_Gap    '	
		:rewritefile3	
			infile = dir_log_dados_3 ;Arquivo de entrada
			outfile =  dados_iba_3 ;Arquivo de saida com AGCModeSelected decodificado

			fileopen ifd infile 0 ;Abre o arquivo de entrada com o cursor no inicio
			fileopen ofd outfile 0 ;Abre o arquivo de saida com o cursor no inicio
					 	 
			sprintf2 AGCModestring 'AGCModeSelected:    %s' AGCModestr ;Cria string AGCModestring com o modo original
			sprintf2 AGCModewrite 'AGCModeSelected:    %s' AGCMode ;Cria string AGCModewrite com o modo decodificado
			filereadln ifd line ;Move o cursor para a segunda linha
					   	   
			while 1
				filereadln ifd line ;Le uma linha do arquivo de entrada e armazena na string line
				if result=1 then ;Se chegar ao fim do arquivo, sai do loop
				break
				endif
				strreplace line 1 AGCModestring AGCModewrite ;Substitui o modo antigo pelo AGCMode decodificado
				filewriteln ofd line ;Escreve cada linha do arquivo de entrada no arquivo de saida
			endwhile
			fileclose ifd ;Fecha arquivo de entrada
			fileclose ofd ;Fecha arquivo de saida				  									  					
				   
		:capture
			wait 'A737[0]- ' ;Espera pedido de comando
			sendln 'snapshot ShapeControlDeviations PercentSprayLevel' ;Envia comando para obter array de Desvio de planicidade 
			sendln 'snapshot ShapeControlDeviations PercentSprayLevel' ;Envia comando para obter array de Desvio de planicidade
			timeout = 0
			mtimeout = 50 ;Tempo atualizado em 24/09/2019 - Ewelim (Anterior = 250)
			wait 'timeoutflag'
			if result=0 goto open ;Apos o delay de 0.05s, inicia-se o log do sinal de planicidade
		:open
			logopen dir_log 1 0 ;Inicia log 
			timeout = 0
			mtimeout = 1500 ;Tempo atualizado em 24/09/2019 - Ewelim (Anterior = 950)
			wait 'timeoutflag'
			if result=0 goto closelog  ;Apos 1.2s, encerra o log
		:closelog	 
			SprayArray = ' '
			tempfl = "R:\Working\DesviodePlanicidadeSpraytemp.txt"
			logclose ;Fecha log
			send #3  ;Envia CTRL+C para parar de obter array de Desvio de planicidade 
		:rewritefiledev
			;Inserido em 24/09/2019 - Ewelim 		  		        
			infiledev = dir_log ;Arquivo de entrada
			outfiledev = dir_log_temp ;Arquivo de saida sem a primeira linha (que contem lixo)
			ifdev = 0
			ofdev = 0
			outf = 0	   
			fileopen ifdev infiledev 0 ;Abre o arquivo de entrada com o cursor no inicio
			fileopen ofdev outfiledev 0 ;Abre o arquivo de saida com o cursor no inicio
			filereadln ifdev line ;Move o cursor para a segunda linha do arquivo de entrada
			while 1
				filereadln ifdev line ;Le uma linha do arquivo de entrada e armazena na string line
				if result=1 then ;Se chegar ao fim do arquivo, sai do loop
				break
				endif
				filewriteln ofdev line ;Escreve cada linha do arquivo de entrada no arquivo de saida
			endwhile
			fileclose ifdev ;Fecha arquivo de entrada
			fileclose ofdev ;Fecha arquivo de saida
			
			filecopy dir_log_temp desvio_iba ;Copia o arquivo para o diretorio desvio_iba
			fileopen fhandle dir_log_temp  0 1   ;Abre o arquivo txt criado ja sem a primeira linha               
			filestrseek fhandle 'ShapeControlDeviations:     0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0'
			if result=1 then ;Procura no arquivo o array de planicidade zero, e se achar, zera o array do spray e volta para o inicio para obter Flag MillInRun
			   	filestrseek fhandle 'PercentSprayLevel:     ' ;Procura no arquivo o Array de planicidade
				if result=1 then
				   filereadln fhandle SprayArray ;Le a linha do arquivo e armazena o array de Spray na string SprayArray
				   fileseek fhandle 0 0 ;Move o cursor para o inicio do arquivo
				   fileopen outf tempfl 0 ;Cria e abre um arquivo temporario na pasta Working
				endif
				while 1
					line = ' '
					filereadln fhandle line ;Le uma linha do arquivo de entrada e armazena na string line
					if result=1 then ;Se chegar ao fim do arquivo, sai do loop
						break
					endif
					strreplace line 1 SprayArray '0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0    0.0' ;Zera spray
					filewriteln outf line ;Escreve cada linha no arquivo de saida
				endwhile
				filedelete dir_running_file ;Exclui arquivo Runningfile.txt da pasta Working
				fileclose fhandle ;Fecha o arquivo de entrada
				filecopy tempfl desvio_iba
				fileclose outf ;Fecha o arquivo de saida
				filedelete dir_log ;Exclui o arquivo txt criado no diretorio dir_log
				filedelete tempfl ;Exclui o arquivo temporario
				goto start ;Volta para o inicio do programa para obter Flag MillInRun
			elseif result=0 then ;Se nao achar o array de planicidade zero, continua a obter planicidade
				fileclose fhandle ;Fecha o arquivo txt do diretorio dir_log
				filedelete dir_log ;Exclui o arquivo txt criado no diretorio dir_log
				filedelete dir_log_temp ;Exclui o arquivo temporario criado no diretorio Working
				goto capture ;Volta para label capture
			endif
endwhile ;Fim do programa